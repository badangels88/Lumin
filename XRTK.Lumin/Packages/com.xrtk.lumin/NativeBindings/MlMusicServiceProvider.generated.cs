//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace XRTK.Lumin.Native.Bindings
{
    using System.Runtime.InteropServices;

    internal static class MlMusicServiceProvider
    {
        /// <summary>
        /// List of music service provider APIs User will need provide implementation for them
        /// </summary>
        /// <remarks>
        /// Deprecated since 0210 Scheduled for removal Replaced by MLMusicServiceProviderImplementationEx
        /// </remarks>
        [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
        public struct MLMusicServiceProviderImplementation
        {
            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.set_auth_string_delegate set_auth_string;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_auth_string_delegate([MarshalAs(UnmanagedType.LPStr)] string auth_string, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.set_url_delegate set_url;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_url_delegate([MarshalAs(UnmanagedType.LPStr)] string url, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.set_play_list_delegate set_play_list;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_play_list_delegate(out string list, Interop.size_t count, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.start_delegate start;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult start_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.stop_delegate stop;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult stop_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.pause_delegate pause;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult pause_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.resume_delegate resume;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult resume_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.seek_delegate seek;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult seek_delegate(uint position, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.next_delegate next;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult next_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.previous_delegate previous;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult previous_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.set_shuffle_delegate set_shuffle;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_shuffle_delegate(MlMusicServiceCommon.MLMusicServiceShuffleState mode, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.set_repeat_delegate set_repeat;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_repeat_delegate(MlMusicServiceCommon.MLMusicServiceRepeatState mode, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.set_volume_delegate set_volume;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_volume_delegate(float volume, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.get_track_length_delegate get_track_length;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult get_track_length_delegate(ref uint out_length, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.get_current_position_delegate get_current_position;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult get_current_position_delegate(ref uint out_position, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.get_metadata_delegate get_metadata;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult get_metadata_delegate(MlMusicServiceCommon.MLMusicServiceTrackType track, ref MlMusicServiceCommon.MLMusicServiceMetadata out_metadata, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementation.on_end_service_delegate on_end_service;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate void on_end_service_delegate(IntPtr callback_context);

            /// <summary>
            /// User pointer that will be passed through the callback functions when fired
            /// </summary>
            public IntPtr callback_context;
        }

        /// <summary>
        /// Music Service provider callback functions
        /// @apilevel 5
        /// </summary>
        [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
        public struct MLMusicServiceProviderImplementationEx
        {
            public uint version;

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.set_auth_string_delegate set_auth_string;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_auth_string_delegate([MarshalAs(UnmanagedType.LPStr)] string auth_string, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.set_url_delegate set_url;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_url_delegate([MarshalAs(UnmanagedType.LPStr)] string url, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.set_play_list_delegate set_play_list;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_play_list_delegate(out string list, Interop.size_t count, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.start_delegate start;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult start_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.stop_delegate stop;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult stop_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.pause_delegate pause;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult pause_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.resume_delegate resume;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult resume_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.seek_delegate seek;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult seek_delegate(uint position, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.next_delegate next;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult next_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.previous_delegate previous;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult previous_delegate(IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.set_shuffle_delegate set_shuffle;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_shuffle_delegate(MlMusicServiceCommon.MLMusicServiceShuffleState mode, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.set_repeat_delegate set_repeat;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_repeat_delegate(MlMusicServiceCommon.MLMusicServiceRepeatState mode, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.set_volume_delegate set_volume;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult set_volume_delegate(float volume, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.get_track_length_delegate get_track_length;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult get_track_length_delegate(ref uint out_length, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.get_current_position_delegate get_current_position;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult get_current_position_delegate(ref uint out_position, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.get_metadata_for_index_delegate get_metadata_for_index;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate MlApi.MLResult get_metadata_for_index_delegate(int track_index, ref MlMusicServiceCommon.MLMusicServiceMetadata out_metadata, IntPtr callback_context);

            public MlMusicServiceProvider.MLMusicServiceProviderImplementationEx.on_end_service_delegate on_end_service;

            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public delegate void on_end_service_delegate(IntPtr callback_context);

            /// <summary>
            /// Context pointer from the user that will be passed to callback functions
            /// </summary>
            public IntPtr callback_context;
        }

        /// <summary>
        ///  MLMusicServiceGetMetadataEx
        /// Create music service provider instance
        /// </summary>
        /// <param name="implementation">Implementations provided by the client</param>
        /// <returns>
        /// MLResult_AllocFailed Creation failed with resource allocation failure
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Created Provider to MusicService successfully
        /// MLResult_PrivilegeDenied Necessary privilege is missing
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// </returns>
        /// <remarks>
        /// Deprecated since 0210 Scheduled for removal Replaced by
        /// @priv MusicService
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderCreate(in MlMusicServiceProvider.MLMusicServiceProviderImplementation implementation);

        /// <summary>
        /// Create music service provider instance
        /// @apilevel 5
        /// </summary>
        /// <param name="implementation">Music Service Provider Implementation</param>
        /// <returns>
        /// MLResult_AllocFailed Creation failed with resource allocation failure
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Created Provider to MusicService successfully
        /// MLResult_PrivilegeDenied Necessary privilege is missing
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// </returns>
        /// <remarks>
        /// @priv MusicService
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderCreateEx(in MlMusicServiceProvider.MLMusicServiceProviderImplementationEx implementation);

        /// <summary>
        /// Register with the background music service and start the music service provider
        /// </summary>
        /// <param name="music_service_name">Name of the Music Service provider This name should match
        /// the "ml:visible_name" in the manifestxml of the C version of the Music
        /// Service provider component</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_PrivilegeDenied Necessary privilege is missing
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv RegisterBackgroundMusicService, MusicService
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderStart([MarshalAs(UnmanagedType.LPStr)] string music_service_name);

        /// <summary>
        /// Configure the audio output to which the audio will be rendered
        /// </summary>
        /// <param name="sample_rate">Sampling rate of the output channel(s)</param>
        /// <param name="channel_count">Number of output channels</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_PrivilegeDenied Necessary privilege is missing
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv MusicService
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderSetAudioOutput(uint sample_rate, uint channel_count);

        /// <summary>
        /// Write audio buffer to the output port
        /// </summary>
        /// <param name="buffer">Audio data</param>
        /// <param name="buffer_size">Size of audio buffer</param>
        /// <param name="is_sync">@c true for synchronous operation and @c false otherwise</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_PrivilegeDenied Necessary privilege is missing
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv MusicService
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderWriteAudioOutput(IntPtr buffer, Interop.size_t buffer_size, [MarshalAs(UnmanagedType.U1)] bool is_sync);

        /// <summary>
        /// Flush audio buffers
        /// </summary>
        /// <returns>
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_PrivilegeDenied Necessary privilege is missing
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv MusicService
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderFlushAudioOutput();

        /// <summary>
        /// Release audio output port
        /// </summary>
        /// <returns>
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_PrivilegeDenied Necessary privilege is missing
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv MusicService
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderReleaseAudioOutput();

        /// <summary>
        /// Set volume
        /// </summary>
        /// <param name="volume">Volume to set</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_PrivilegeDenied Necessary privilege is missing
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv MusicService
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderSetVolume(float volume);

        /// <summary>
        /// Notify the music service UI/App about position change
        /// </summary>
        /// <param name="position">New track position</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderNotifyPositionChange(uint position);

        /// <summary>
        /// Notify the music service UI/App about the playback state change
        /// </summary>
        /// <param name="state">New playback state</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderNotifyPlaybackStateChange(MlMusicServiceCommon.MLMusicServicePlaybackState state);

        /// <summary>
        /// Notify the music service UI/App about the repeat state change
        /// </summary>
        /// <param name="state">New repeat state</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderNotifyRepeatStateChange(MlMusicServiceCommon.MLMusicServiceRepeatState state);

        /// <summary>
        /// Notify the music service UI/App about the shuffle state change
        /// </summary>
        /// <param name="state">New shuffle state</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderNotifyShuffleStateChange(MlMusicServiceCommon.MLMusicServiceShuffleState state);

        /// <summary>
        /// Notify the music service UI/App about provider's status update
        /// </summary>
        /// <param name="status">New music service provider status</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderNotifyStatus(MlMusicServiceCommon.MLMusicServiceStatus status);

        /// <summary>
        /// Notify the music service UI/App about the errors
        /// </summary>
        /// <param name="type">Error type</param>
        /// <param name="code">Error code
        /// For error types other than MLMusicServiceError_ServiceSpecific,
        /// the value of 'code' uses the same enumeration as 'type'
        /// For MLMusicServiceError_ServiceSpecific, the 'code' is known only
        /// between the music service provider and the application, therefore
        /// the values are not documented in this file</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderNotifyError(MlMusicServiceCommon.MLMusicServiceError type, int code);

        /// <summary>
        /// Notify the music service UI/App about the metadata change
        /// </summary>
        /// <returns>
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderNotifyMetadataChange();

        /// <summary>
        /// Notify the music service UI/App about the volume change
        /// </summary>
        /// <param name="volume">Volume level</param>
        /// <returns>
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderNotifyVolumeChange(float volume);

        /// <summary>
        /// Terminates music service provider process
        /// </summary>
        /// <returns>
        /// MLResult_Ok Disconnected from MusicService successfully
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// MLMediaGenericResult_NoInit Music service wasn't connected
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_musicservice_provider", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMusicServiceProviderTerminate();
    }
}
