//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace XRTK.Lumin.Native.Bindings
{
    using System.Runtime.InteropServices;

    internal static class MlMediaDataSource
    {
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate long MLMediaDataSourceReadAt(MlApi.MLHandle media_data_source, Interop.size_t position, Interop.size_t size, ref byte buffer, IntPtr context);

        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate long MLMediaDataSourceGetSize(MlApi.MLHandle media_data_source, IntPtr context);

        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate void MLMediaDataSourceClose(MlApi.MLHandle media_data_source, IntPtr context);

        /// <summary>
        /// Create a new MediaDataSource object
        /// </summary>
        /// <param name="read_at">MLMediaDataSourceReadAt callback</param>
        /// <param name="get_size">MLMediaDataSourceGetSize callback</param>
        /// <param name="close">MLMediaDataSourceClose callback</param>
        /// <param name="context">User data to be passed to callbacks</param>
        /// <param name="out_handle">The MLHandle to the new source object created Only valid if result is MLResult_Ok</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok if operation was successful
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_media_data_source", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMediaDataSourceCreate(MlMediaDataSource.MLMediaDataSourceReadAt read_at, MlMediaDataSource.MLMediaDataSourceGetSize get_size, MlMediaDataSource.MLMediaDataSourceClose close, IntPtr context, ref MlApi.MLHandle out_handle);

        /// <summary>
        /// Destroy a MediaDataSource object
        /// </summary>
        /// <param name="media_data_source">MLHandle to the MediaDataSource object to destroy</param>
        /// <returns>
        /// MLResult_InvalidParam One of the parameters is invalid
        /// MLResult_Ok if operation was successful
        /// MLResult_UnspecifiedFailure The operation failed with an unspecified error
        /// </returns>
        /// <remarks>
        /// @priv None
        /// </remarks>
        [DllImport("ml_media_data_source", CallingConvention = CallingConvention.Cdecl)]
        public static extern MlApi.MLResult MLMediaDataSourceDestroy(MlApi.MLHandle media_data_source);
    }
}
